openapi: 3.0.0
servers: []

info:
  description: This is the API of the User service
  version: "1.0.0"
  title: User API
  contact:
    email: helene.coullon@imt-atlantique.fr
  license:
    name: GPL v3
    url: "https://www.gnu.org/licenses/gpl-3.0.en.html"

tags:
  - name: admins
    description: Secured Admin-only calls
  - name: developers
    description: Operations available to regular developers

paths:
  /:
    get:
      tags:
        - developers
      summary: home page of the service
      operationId: home
      description: |
        Nothing to do
      responses:
        "200":
          description: welcome message
          content:
            text/html:
              schema:
                type: string
                example: "<h1 style='color:blue'>Welcome to the User service!</h1>"
  /users:
    get:
      tags:
        - developers
      summary: get the full users database
      operationId: get_users
      description: |
        Nothing to do
      responses:
        "200":
          description: all users
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AllUsers"
  /users/{userid}:
    get:
      tags:
        - developers
      summary: get the user by its id
      operationId: get_user_by_id
      description: |
        By passing in the appropriate options, you can get info of a user
      parameters:
        - name: userid
          in: path
          required: true
          description: User ID.
          schema:
            type: string
            minimum: 1
            maximum: 1
      responses:
        "200":
          description: User description
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserItem"
        "404":
          description: User not found
    post:
      tags:
        - admins
      summary: add a user item
      operationId: create_user
      description: Adds a user to the system
      parameters:
        - name: userid
          in: path
          required: true
          description: User ID.
          schema:
            type: string
            minimum: 1
            maximum: 1
      responses:
        "201":
          description: User created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserItem"
        "409":
          description: an existing item already exists
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                  example: Peter Curley
        description: Inventory item to add
    put:
      tags:
        - admins
      summary: update a user item
      operationId: create_user
      description: Adds a user to the system
      parameters:
        - name: userid
          in: path
          required: true
          description: User ID.
          schema:
            type: string
            minimum: 1
            maximum: 1
      responses:
        "200":
          description: User updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserItem"
        "404":
          description: User not found
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Peter Curley
                last_active:
                  type: integer
                  example: 1360031222
        description: Inventory item to update
  
  /users/{userid}/bookings:
    get:
      tags:
        - developers
      summary: get the user bookings by their id
      operationId: get_user_bookings_by_id
      description: |
        By passing in the appropriate options, you can get info of a user
      parameters:
        - name: userid
          in: path
          required: true
          description: User ID.
          schema:
            type: string
            minimum: 1
            maximum: 1
      responses:
        "200":
          description: User description
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MovieItem"
        "404":
          description: User not found

components:
  schemas:
    AllUsers:
      type: object
      required:
        - users
      properties:
        users:
          type: array
          items:
            type: object
            $ref: "#/components/schemas/UserItem"
    UserItem:
      type: object
      required:
        - id
        - name
        - last_active
      properties:
        id:
          type: string
          example: peter_curley
        name:
          type: string
          example: Peter Curley
        last_active:
          type: integer
          example: 1360031222
    MovieItem:
      required:
      - director
      - rating
      - title
      - dates
      type: object
      properties:
        title:
          type: string
          example: The Martian
        rating:
          type: number
          example: 7.4
        director:
          type: string
          example: Paul McGuigan
        dates:
          type: array
          items:
            type: string
            example: "20151205"
